{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyNZJi9FREKwXQw/5CY3UDwO"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","source":["import numpy as np\n","import pandas as pd\n","from pgmpy.estimators import MaximumLikelihoodEstimator\n","from pgmpy.models import BayesianModel\n","from pgmpy.inference import VariableElimination\n","from sklearn.model_selection import train_test_split\n","from sklearn.metrics import accuracy_score\n","\n","# Load the dataset\n","heartDisease = pd.read_excel()#upload your data set\n","heartDisease = heartDisease.replace('?', np.nan)\n","print('Sample instance from the dataset:')\n","print(heartDisease.head())\n","\n","print('\\nAttributes and data types in the dataset:')\n","print(heartDisease.dtypes)\n","\n","# Define the Bayesian Network structure\n","model = BayesianModel([\n","    ('age', 'heartDisease'),\n","    ('sex', 'heartDisease'),\n","    ('exang', 'heartDisease'),\n","    ('cp', 'heartDisease'),\n","    ('heartDisease', 'restecg'),\n","    ('heartDisease', 'chol')\n","])\n","\n","print('\\nLearning CPD using Maximum Likelihood Estimators')\n","data_train, data_test = train_test_split(heartDisease, test_size=0.2, random_state=42)\n","\n","# Fit the model\n","model.fit(data_train,estimator=MaximumLikelihoodEstimator)\n","\n","print('\\nInferencing with Bayesian Network')\n","heart_infer = VariableElimination(model)\n","predictions = []\n","\n","# Make predictions\n","for i in range(data_test.shape[0]):\n","    evidence = data_test.iloc[i].drop('heartDisease').to_dict()\n","    evidence = {key: evidence[key] for key in evidence if key in model.nodes()}  # Filter evidence\n","\n","    q = heart_infer.query(variables=['heartDisease'], evidence=evidence)\n","    prediction = q.values.argmax()  # Get the index of the max probability\n","    predictions.append(prediction)\n","\n","# Calculate accuracy\n","accuracy = accuracy_score(data_test['heartDisease'], predictions)\n","print(f'Accuracy of the model is: {accuracy:.4f}')\n","\n","# Query for specific evidence\n","print('\\nProbability of heart disease given restecg = 1')\n","q1 = heart_infer.query(variables=['heartDisease'], evidence={'restecg': 1})\n","print(q1)\n","\n","print('\\nProbability of heart disease given cp = 2')\n","q2 = heart_infer.query(variables=['heartDisease'], evidence={'cp': 2})\n","print(q2)"],"metadata":{"id":"nMN1O9Yvs-cK"},"execution_count":null,"outputs":[]}]}